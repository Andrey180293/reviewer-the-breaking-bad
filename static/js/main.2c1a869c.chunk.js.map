{"version":3,"sources":["reportWebVitals.js","store/action-creators/data.js","store/reducers/data.js","store/store.js","components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","containers/Sidebar_Container.js","components/Content/Characters_Content/Characters_Card.jsx","components/Content/Characters_Content/Characters_Modal.jsx","common/Paginator/Paginator.jsx","components/Content/Characters_Content/Characters_Content.jsx","components/Content/Episodes/Episodes_Card.jsx","components/Content/Episodes/Episodes List/Episodes_List_Characters_Card.jsx","components/Content/Episodes/Episodes List/Episodes_List_Card.jsx","components/Content/Episodes/Episodes List/Episodes_List.jsx","components/Content/Episodes/Episodes_Content.jsx","components/Content/Quotes/Quotes_List.jsx","components/Content/Quotes/Quotes_Content.jsx","components/Content/Start_Page.jsx","components/Content/Deathes/Deathes_List.jsx","components/Content/Deathes/Deathes_Content.jsx","containers/Content_Container.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_DATA","SET_LOAD","SET_CURRENT_PAGE","setLoad","payload","type","setCurrentPage","getData","link","dispatch","a","fetch","response","json","data","initialization","isLoad","totalCount","currentPage","perPage","DataReducer","state","action","reducers","combineReducers","dataReducer","store","createStore","applyMiddleware","logger","thunkMiddleware","useStyles","makeStyles","theme","root","flexGrow","position","top","width","zIndex","menuButton","marginRight","spacing","title","linkDekore","color","textDecorationLine","Header","isOpenBurger","setOpenBurger","classes","className","AppBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","to","Sidebar","sidebarHandleChange","useState","activeHoverLink","setActiveHoverLink","activeLink","setActiveLink","Grid","container","item","xs","sm","md","lg","style","backgroundColor","opacity","Divider","List","name","map","index","textDecoration","ListItem","button","onMouseEnter","onMouseLeave","ListItemText","primary","compose","connect","el","useStyles2","table","minWidth","Characters_Card","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","scope","marginLeft","fontWeight","nickname","birthday","portrayed","status","category","occupation","length","modal","display","alignItems","justifyContent","Characters_Modal","isOpenModal","setOpenModal","modalPage","open","onClose","flexDirection","Fade","in","background","img","Paginator","counts","activePage","setPage","num","borderTop","borderRight","res","i","push","res2","slice","startNumbers","endNumbers","ifEndlength","middleCount","concat","contsArr","count","disabled","Characters_Content","pagesCount","React","setModalPage","handleModalChange","char_id","height","cursor","bullet","margin","transform","fontSize","pos","marginBottom","Episodes_Card","episode","Card","CardContent","gutterBottom","CardActions","Button","size","Episodes_List_Characters_Card","charactersArr","charactersItem","titleName","Episodes_List_Card","row","air_date","series","Episodes_List","listNumber","MapArr","filter","season","sort","b","padding","direction","justify","characters","Episodes_Content","seasonsCount","openList","setOpenList","setListNumber","setSeries","setEpisodeListContent","n","str","textAlign","Quotes_List","quotesAuthorList","f","author","quote","paper","decoration","Quotes_Content","quoteAutor","quoteCount","setQuotesAuthorList","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","palette","main","lineHeight","Start_Page","head","Deathes_List","seasonNumber","TableHead","align","death","responsible","last_words","cause","Deathes_Content","seasonsDeathsCount","deathsPeopleCount","setSeasonNumber","seasonsArr","Set","Math","ceil","useEffect","LinearProgress","marginTop","exact","path","render","overflow","text","secondary","hide","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c1a869c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SET_DATA = \"SET_DATA\";\r\nexport const SET_LOAD = \"SET_LOAD\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\n\r\nconst setData = (payload) => ({ type: SET_DATA, payload });\r\nexport const setLoad = (payload) => ({ type: SET_LOAD, payload });\r\nexport const setCurrentPage = (payload) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  payload,\r\n});\r\n\r\n//-----------------------------------------------------------\r\nexport const getData = (link) => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoad(false));\r\n    const response = await fetch(`https://www.breakingbadapi.com/api/${link}`);\r\n    const data = await response.json();\r\n\r\n    dispatch(setData(data));\r\n    dispatch(setLoad(true));\r\n\r\n    return data;\r\n  };\r\n};\r\n\r\n//-----------------------------------------------------------\r\n","import { SET_DATA, SET_LOAD, SET_CURRENT_PAGE } from \"../action-creators/data\";\r\n\r\nconst initialization = {\r\n  data: null,\r\n  isLoad: true,\r\n  totalCount: 62,\r\n  currentPage: 1,\r\n  perPage: 10,\r\n};\r\n\r\nconst DataReducer = (state = initialization, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case SET_LOAD:\r\n      return {\r\n        ...state,\r\n        isLoad: action.payload,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: +action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default DataReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dataReducer from \"./reducers/data\";\r\nimport logger from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n  data: dataReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(logger, thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"fixed\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    zIndex: 1000,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  linkDekore: {\r\n    color: \"white\",\r\n    textDecorationLine: \"none\",\r\n  },\r\n}));\r\n\r\nconst Header = ({ isOpenBurger, setOpenBurger }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {!isOpenBurger ? (\r\n            <IconButton\r\n              onClick={() => setOpenBurger(!isOpenBurger)}\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              edge=\"start\"\r\n              onClick={() => setOpenBurger(!isOpenBurger)}\r\n            >\r\n              {\" \"}\r\n              <CloseIcon />\r\n            </IconButton>\r\n          )}\r\n\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            <NavLink className={classes.linkDekore} to=\"/\">\r\n              Film viewer\r\n            </NavLink>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Sidebar = ({ sidebarHandleChange }) => {\r\n  const sideMenu = [\r\n    { name: \"Персонажі\", link: \"characters\" },\r\n    { name: \"Епізоди\", link: \"episodes\" },\r\n    { name: \"Цитати героїв\", link: \"quotes\" },\r\n    { name: \"Хто, коли загинув\", link: \"deaths\" },\r\n  ];\r\n\r\n  const [activeHoverLink, setActiveHoverLink] = useState(null);\r\n  const [activeLink, setActiveLink] = useState(null);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      xs={8}\r\n      sm={4}\r\n      md={3}\r\n      lg={2}\r\n      style={{\r\n        position: \"fixed\",\r\n        top: \"70px\",\r\n        backgroundColor: \"#115293\",\r\n        zIndex: \"1000\",\r\n        opacity: \"0.9\",\r\n      }}\r\n    >\r\n      <Divider />\r\n      <List\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {sideMenu.map((item, index) => (\r\n          <NavLink\r\n            key={item.link + index + \"index\"}\r\n            to={\"/\" + item.link}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              width: \"100%\",\r\n              backgroundColor: \"red\",\r\n            }}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={index + item.link}\r\n              onClick={() => setActiveLink(index)}\r\n              onMouseEnter={() => setActiveHoverLink(index)}\r\n              onMouseLeave={() => setActiveHoverLink(null)}\r\n              style={{\r\n                backgroundColor:\r\n                  (activeHoverLink === index && \"#4caf50\") ||\r\n                  (activeLink === index && \"#f44336\"),\r\n              }}\r\n            >\r\n              <ListItemText\r\n                style={{\r\n                  color: \"white\",\r\n                }}\r\n                primary={item.name}\r\n                onClick={() => sidebarHandleChange(item)}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { getData, setCurrentPage } from \"../store/action-creators/data\";\n\nimport Sidebar from \"../components/Sidebar/Sidebar\";\n\nconst Sidebar_Container = ({ getData, setCurrentPage, perPage }) => {\n  const sidebarHandleChange = (el) => {\n    setCurrentPage(1);\n    getData(`${el.link}?limit=${perPage}&offset=0`);\n  };\n\n  return <Sidebar sidebarHandleChange={sidebarHandleChange} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    perPage: state.data.perPage,\n  };\n};\n\nexport default compose(connect(mapStateToProps, { getData, setCurrentPage }))(\n  Sidebar_Container\n);\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nconst Characters_Card = ({ item }) => {\r\n  const classes = useStyles2();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Name:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.name}\r\n              </span>\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Nickname:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.nickname}\r\n              </span>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Birthday:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.birthday}\r\n              </span>\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Portrayed:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.portrayed}\r\n              </span>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Status:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.status}\r\n              </span>\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Category:\r\n              <span style={{ marginLeft: \"15px\", fontWeight: \"bold\" }}>\r\n                {item.category}\r\n              </span>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            {item.occupation && item.occupation.length > 0 && (\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <h3>Occupation:</h3>\r\n              </TableCell>\r\n            )}\r\n            {item.occupation &&\r\n              item.occupation.map((el) => {\r\n                return (\r\n                  <TableRow key={el + \"table\"}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {el}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Characters_Card;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./Characters_Content.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent \",\r\n  },\r\n}));\r\nconst Characters_Modal = ({ isOpenModal, setOpenModal, modalPage }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={classes.modal}\r\n        open={isOpenModal}\r\n        onClose={() => setOpenModal(!isOpenModal)}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Fade in={isOpenModal}>\r\n          <div\r\n            onClick={() => setOpenModal(!isOpenModal)}\r\n            style={{\r\n              background: `url(${\r\n                isOpenModal && modalPage.img\r\n              }) 0 0/100% 95% no-repeat`,\r\n            }}\r\n            className=\"characterModalImg\"\r\n          ></div>\r\n        </Fade>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Characters_Modal;\r\n","import React, { useState } from \"react\";\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({\r\n  counts,\r\n  setCurrentPage,\r\n  color = \"#2196f3\",\r\n  activePage,\r\n}) => {\r\n  const contsArr = (counts, activePage) => {\r\n    const middleCount = 2;\r\n    const res = [];\r\n    for (let i = 1; i <= counts; i++) {\r\n      res.push(i);\r\n    }\r\n\r\n    const res2 = res.slice(\r\n      activePage > middleCount\r\n        ? activePage - (middleCount + 1)\r\n        : activePage - activePage,\r\n      activePage + middleCount\r\n    );\r\n    //--------------------------------------------------------------------------\r\n\r\n    const startNumbers = res.slice(0, middleCount);\r\n    //--------------------------------------------------------------------------\r\n    const endNumbers = res.slice(-middleCount, res.length);\r\n    //--------------------------------------------------------------------------\r\n\r\n    // Умова при якій появляються останні цифри\r\n    const ifEndlength =\r\n      activePage < res.length - (middleCount + middleCount - 1)\r\n        ? endNumbers\r\n        : activePage < res.length - middleCount\r\n        ? endNumbers.slice(1, endNumbers.length)\r\n        : [];\r\n\r\n    //--------------------------------------------------------------------------\r\n\r\n    return res.length <= 10\r\n      ? res\r\n      : activePage > middleCount + middleCount\r\n      ? startNumbers.concat(res2, ifEndlength)\r\n      : activePage > middleCount + middleCount - 1\r\n      ? startNumbers.slice(0, startNumbers.length - 1).concat(res2, ifEndlength)\r\n      : res2.concat(ifEndlength);\r\n  };\r\n\r\n  const setPage = (num) => {\r\n    setCurrentPage(num);\r\n  };\r\n  return (\r\n    <div className=\"paginator\">\r\n      <div\r\n        className=\"triangle left\"\r\n        onClick={() => setPage(activePage > 1 ? activePage - 1 : 1)}\r\n        style={{\r\n          borderTop: `5px solid ${\r\n            activePage == 1 ? \"rgb(190, 190, 190)\" : color\r\n          }`,\r\n          borderRight: `5px solid ${\r\n            activePage == 1 ? \"rgb(190, 190, 190)\" : color\r\n          }`,\r\n        }}\r\n      />\r\n      {contsArr(counts, activePage).map((count) => {\r\n        return (\r\n          <div\r\n            key={count}\r\n            className=\"paginator-number\"\r\n            onClick={() => setPage(count)}\r\n            style={{\r\n              backgroundColor: activePage === count && color,\r\n              color: activePage === count && \"white\",\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        );\r\n      })}\r\n      <div\r\n        disabled={true}\r\n        onClick={() => setPage(activePage < counts ? activePage + 1 : counts)}\r\n        className=\"triangle right\"\r\n        style={{\r\n          borderTop: `5px solid ${\r\n            activePage == counts ? \"rgb(190, 190, 190)\" : color\r\n          }`,\r\n          borderRight: `5px solid ${\r\n            activePage == counts ? \"rgb(190, 190, 190)\" : color\r\n          }`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport Characters_Card from \"./Characters_Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Characters_Modal from \"./Characters_Modal\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Characters_Content.scss\";\r\nimport Paginator from \"../../../common/Paginator/Paginator\";\r\n\r\nconst Characters_Content = ({\r\n  data,\r\n  pagesCount,\r\n  setCurrentPage,\r\n  currentPage,\r\n}) => {\r\n  const [isOpenModal, setOpenModal] = React.useState(false);\r\n  const [modalPage, setModalPage] = React.useState(null);\r\n\r\n  const handleModalChange = (item) => {\r\n    setOpenModal(true);\r\n    setModalPage(item);\r\n    return item;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isOpenModal ? (\r\n        <>\r\n          {data &&\r\n            data.map((item, i) => {\r\n              return (\r\n                <Grid container spacing={3} key={item.char_id + \"char_id\"}>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={5}\r\n                    md={4}\r\n                    onClick={() => handleModalChange(item)}\r\n                  >\r\n                    <NavLink\r\n                      to={`/characters/${item.char_id}`}\r\n                      style={{ width: \"100%\", height: \"100%\" }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          background: `url(${item.img}) 0 0/100% 95% no-repeat`,\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        className=\"characterImg\"\r\n                      ></div>\r\n                    </NavLink>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={7} md={8}>\r\n                    <Characters_Card item={item} />\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          <Paginator\r\n            counts={pagesCount}\r\n            setCurrentPage={setCurrentPage}\r\n            color={\"#2123f3\"}\r\n            activePage={currentPage}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Characters_Modal\r\n          isOpenModal={isOpenModal}\r\n          setOpenModal={setOpenModal}\r\n          modalPage={modalPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Characters_Content;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst Episodes_Card = ({ el, color, episode }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card style={{ backgroundColor: color }}>\r\n      <NavLink to={`/episodes/${episode}/seasons/${el}`}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Season {el}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </NavLink>\r\n    </Card>\r\n  );\r\n};\r\nexport default Episodes_Card;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#81c784\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst Episodes_List_Characters_Card = ({ charactersArr }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"h5\">\r\n          Characters\r\n        </Typography>\r\n        {charactersArr.map((charactersItem, i) => {\r\n          return (\r\n            <Typography\r\n              key={charactersItem + i}\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {charactersItem}\r\n            </Typography>\r\n          );\r\n        })}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\nexport default Episodes_List_Characters_Card;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n    backgroundColor: \"#e57373\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 12,\r\n    borderTop: \"1px solid grey\",\r\n  },\r\n  titleName: {\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst Episodes_List_Card = ({ row }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          episode {row.episode}\r\n        </Typography>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          date {row.air_date}\r\n        </Typography>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {\" \"}\r\n          title\r\n          <Typography\r\n            className={classes.titleName}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {row.title}\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {\" \"}\r\n          Series\r\n          <Typography\r\n            className={classes.titleName}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {row.series}\r\n          </Typography>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\nexport default Episodes_List_Card;\r\n","import React from \"react\";\r\nimport \"./Episodess_Content.scss\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Episodes_List_Characters_Card from \"./Episodes_List_Characters_Card\";\r\nimport Episodes_List_Card from \"./Episodes_List_Card\";\r\n\r\nconst Episodes_List = ({ listNumber, data, series }) => {\r\n  const MapArr = data\r\n    .filter((el) => el.season == listNumber && el.series == series)\r\n    .sort((a, b) => a.episode - b.episode)\r\n    .map((el) => el);\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ padding: \"0  80px 0 0\" }}>\r\n      {MapArr.map((row, i) => {\r\n        return (\r\n          <Grid\r\n            key={i + \"w\"}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"stretch\"\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={3}\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Episodes_List_Card row={row} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {\" \"}\r\n              <Episodes_List_Characters_Card charactersArr={row.characters} />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Episodes_List;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Episodes_Card from \"./Episodes_Card\";\r\nimport Episodes_List from \"./Episodes List/Episodes_List\";\r\n\r\nconst Episodes_Content = ({ data, seasonsCount }) => {\r\n  const [openList, setOpenList] = useState(false);\r\n  const [listNumber, setListNumber] = useState(null);\r\n  const [series, setSeries] = useState(null);\r\n\r\n  const setEpisodeListContent = (n, str) => {\r\n    setOpenList(true);\r\n    setListNumber(n);\r\n    setSeries(str);\r\n  };\r\n  return (\r\n    <div>\r\n      {!openList ? (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justify=\"space-between\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n            Breaking Bad\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n            Better Call Saul\r\n          </Grid>\r\n\r\n          <Grid container spacing={3} item xs={6} style={{ height: \"100%\" }}>\r\n            {[...seasonsCount(data, \"Breaking Bad\")].map((el, i) => {\r\n              return (\r\n                <Grid\r\n                  key={i + \"z\"}\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  lg={4}\r\n                  onClick={() => setEpisodeListContent(el, \"Breaking Bad\")}\r\n                >\r\n                  <Episodes_Card\r\n                    el={el}\r\n                    color=\"#f44336\"\r\n                    episode={\"Breaking Bad\"}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n\r\n          <Grid container item xs={6} spacing={3} style={{ height: \"100%\" }}>\r\n            {[...seasonsCount(data, \"Better Call Saul\")].map((el, i) => {\r\n              return (\r\n                <Grid\r\n                  key={i + \"a\"}\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  lg={4}\r\n                  onClick={() => setEpisodeListContent(el, \"Better Call Saul\")}\r\n                >\r\n                  <Episodes_Card\r\n                    el={el}\r\n                    color=\"#4caf50\"\r\n                    episode={\"Better Call Saul\"}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Episodes_List\r\n          listNumber={listNumber}\r\n          seasonsCount={seasonsCount}\r\n          data={data}\r\n          series={series}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Episodes_Content;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst Quotes_List = ({ data, quotesAuthorList }) => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {data\r\n        .filter((f) => f.author == quotesAuthorList)\r\n        .map((el) => {\r\n          return (\r\n            <Grid item xs={12} key={el.quote + \"quote\" + 2}>\r\n              <Paper>{el.quote}</Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Quotes_List;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Quotes_List from \"./Quotes_List\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  decoration: { textDecoration: \"none\" },\r\n}));\r\n\r\nconst Quotes_Content = ({ data, quoteAutor, quoteCount }) => {\r\n  const classes = useStyles();\r\n  const [openList, setOpenList] = useState(false);\r\n  const [quotesAuthorList, setQuotesAuthorList] = useState(null);\r\n\r\n  const setQuotesList = (item) => {\r\n    setQuotesAuthorList(item);\r\n    setOpenList(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!openList ? (\r\n        <Grid container spacing={3}>\r\n          {[...quoteAutor(data)].map((el) => {\r\n            return (\r\n              <Grid item xs={3} key={\"quotes\" + el}>\r\n                <NavLink to={`/quotes/${el}`} className={classes.decoration}>\r\n                  <Paper\r\n                    style={{ backgroundColor: \"#4caf50\" }}\r\n                    className={classes.paper}\r\n                    onClick={() => {\r\n                      setQuotesList(el);\r\n                    }}\r\n                  >\r\n                    <Badge\r\n                      badgeContent={quoteCount(data, el)}\r\n                      color=\"primary\"\r\n                      overlap=\"rectangle\"\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\",\r\n                      }}\r\n                    >\r\n                      <div style={{ margin: \"5px\" }}>{el}</div>\r\n                    </Badge>\r\n                  </Paper>\r\n                </NavLink>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      ) : (\r\n        <Quotes_List data={data} quotesAuthorList={quotesAuthorList} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Quotes_Content;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    height: \"25vh\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    fontSize: \"1.5em\",\r\n    lineHeight: \"25vh\",\r\n  },\r\n  decoration: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Start_Page = ({ getData, perPage, setCurrentPage }) => {\r\n  const classes = useStyles();\r\n  const menu = [\r\n    { name: \"Characters\", link: \"characters\" },\r\n    { name: \"Episodes\", link: \"episodes\" },\r\n    { name: \"Quotes\", link: \"quotes\" },\r\n    { name: \"Death\", link: \"deaths\" },\r\n  ];\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={5}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        padding: \"0 50px\",\r\n      }}\r\n    >\r\n      {menu.map((el, i) => {\r\n        return (\r\n          <Grid item xs={12} sm={6} key={el.link + \"link\"}>\r\n            <NavLink to={`/${el.link}`} className={classes.decoration}>\r\n              <Paper\r\n                className={classes.paper}\r\n                onClick={() => {\r\n                  setCurrentPage(1);\r\n                  getData(`${el.link}?limit=${perPage}&offset=0`);\r\n                }}\r\n              >\r\n                {el.name}\r\n              </Paper>\r\n            </NavLink>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Start_Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  head: {\r\n    backgroundColor: \"#4caf50\",\r\n  },\r\n});\r\n\r\nconst Deathes_List = ({ data, seasonNumber }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead className={classes.head}>\r\n          <TableRow>\r\n            <TableCell>Episode</TableCell>\r\n            <TableCell align=\"left\">Death</TableCell>\r\n            <TableCell align=\"left\">Responsible</TableCell>\r\n            <TableCell align=\"left\">Last words</TableCell>\r\n            <TableCell align=\"left\">Cause</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .filter((f) => f.season == seasonNumber)\r\n            .sort((a, b) => a.episode - b.episode)\r\n            .map((row, i) => (\r\n              <TableRow key={row.episode + i + \"episode\"}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.episode}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.death}</TableCell>\r\n                <TableCell align=\"left\">{row.responsible}</TableCell>\r\n                <TableCell align=\"left\">{row.last_words}</TableCell>\r\n                <TableCell align=\"left\">{row.cause}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Deathes_List;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Deathes_List from \"./Deathes_List\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: \"#4caf50\",\r\n  },\r\n  decoration: { textDecoration: \"none\" },\r\n}));\r\n\r\nconst Deathes_Content = ({ data, seasonsDeathsCount, deathsPeopleCount }) => {\r\n  const classes = useStyles();\r\n  const [openList, setOpenList] = useState(false);\r\n  const [seasonNumber, setSeasonNumber] = useState(null);\r\n\r\n  const setDeathesList = (item) => {\r\n    setSeasonNumber(item);\r\n    setOpenList(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!openList ? (\r\n        <Grid container spacing={3}>\r\n          {[...seasonsDeathsCount(data)].sort().map((el, i) => {\r\n            return (\r\n              <Grid item xs={3} key={el + \"deaths\"}>\r\n                <NavLink\r\n                  to={`/deaths/season/${el}`}\r\n                  className={classes.decoration}\r\n                >\r\n                  <Paper\r\n                    className={classes.paper}\r\n                    onClick={() => {\r\n                      setDeathesList(el);\r\n                    }}\r\n                  >\r\n                    <Badge\r\n                      badgeContent={deathsPeopleCount(data, el)}\r\n                      color=\"primary\"\r\n                      overlap=\"rectangle\"\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\",\r\n                      }}\r\n                    >\r\n                      <div style={{ margin: \"5px\" }}>season {el}</div>\r\n                    </Badge>\r\n                  </Paper>\r\n                </NavLink>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      ) : (\r\n        <Deathes_List data={data} seasonNumber={seasonNumber} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Deathes_Content;\r\n","import React, { useEffect } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { getData, setCurrentPage } from \"../store/action-creators/data\";\nimport { Route } from \"react-router\";\nimport Characters_Content from \"../components/Content/Characters_Content/Characters_Content\";\nimport Episodes_Content from \"../components/Content/Episodes/Episodes_Content\";\nimport Quotes_Content from \"../components/Content/Quotes/Quotes_Content\";\nimport Start_Page from \"../components/Content/Start_Page\";\nimport Deathes_Content from \"../components/Content/Deathes/Deathes_Content\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst Content_Container = ({\n  data,\n  isLoad,\n  getData,\n  currentPage,\n  totalCount,\n  perPage,\n  setCurrentPage,\n}) => {\n  //------------------------| Episodes  Functions |-----------------------------------------------------------|\n\n  const seasonsCount = (data, series) => {\n    const seasonsArr =\n      data && data.filter((f) => f.series === series).map((el) => +el.season);\n    return new Set(seasonsArr);\n  };\n  //------------------------| Quotes  Functions |-------------------------------------------------------------|\n\n  const quoteAutor = (data) => {\n    return new Set(data && data.map((el) => el.author));\n  };\n  const quoteCount = (data, str) => {\n    return data.filter((el) => el.author == str).length;\n  };\n\n  //------------------------| Deaths  Functions |-------------------------------------------------------------|\n\n  const seasonsDeathsCount = (data) => {\n    return new Set(data && data.map((el) => +el.season));\n  };\n\n  const deathsPeopleCount = (data, season) => {\n    return data.filter((el) => el.season === season).length;\n  };\n  //----------------------------------------------------------------------------------------------------------|\n  const pagesCount = Math.ceil(totalCount / perPage);\n  useEffect(() => {\n    getData(\n      `characters?limit=${perPage}&offset=${currentPage * perPage - perPage}`\n    );\n  }, [currentPage]);\n\n  if (isLoad === false) return <LinearProgress style={{ marginTop: \"30vh\" }} />;\n  return (\n    <>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <Start_Page\n            perPage={perPage}\n            getData={getData}\n            setCurrentPage={setCurrentPage}\n          />\n        )}\n      />\n      <Route\n        path=\"/characters\"\n        render={() => (\n          <Characters_Content\n            data={data}\n            pagesCount={pagesCount}\n            setCurrentPage={setCurrentPage}\n            currentPage={currentPage}\n          />\n        )}\n      />\n      <Route\n        path=\"/episodes\"\n        render={() => (\n          <Episodes_Content data={data} seasonsCount={seasonsCount} />\n        )}\n      />\n      <Route\n        path=\"/quotes\"\n        render={() => (\n          <Quotes_Content\n            data={data}\n            quoteAutor={quoteAutor}\n            quoteCount={quoteCount}\n          />\n        )}\n      />\n      <Route\n        path=\"/deaths\"\n        render={() => (\n          <Deathes_Content\n            data={data}\n            seasonsDeathsCount={seasonsDeathsCount}\n            deathsPeopleCount={deathsPeopleCount}\n          />\n        )}\n      />\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    data: state.data.data,\n    isLoad: state.data.isLoad,\n    currentPage: state.data.currentPage,\n    perPage: state.data.perPage,\n    totalCount: state.data.totalCount,\n  };\n};\nexport default compose(connect(mapStateToProps, { getData, setCurrentPage }))(\n  Content_Container\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar_Container from \"./containers/Sidebar_Container\";\nimport Content_Container from \"./containers/Content_Container\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: \"50px\",\n    overflow: \"hidden\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  hide: {\n    display: \"none\",\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  const [isOpenBurger, setOpenBurger] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Header setOpenBurger={setOpenBurger} isOpenBurger={isOpenBurger} />\n        </Grid>\n        <Grid item className={!isOpenBurger && classes.hide}>\n          <Sidebar_Container />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          style={{\n            padding: \"20px  \",\n            marginTop: isOpenBurger && \"-24px\",\n          }}\n        >\n          <Content_Container />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}